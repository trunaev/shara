% my $title = '';
% if (my $path = stash 'path') {
%	my @parts = reverse split /\//, $path;
%	$parts[0] =~ s/^(\[|\()?\d{4}(\]|\))?\s*(-|\.)?\s*//;
%	$title = join ' / ', @parts;
%	$title .= ' / ';
% }
% layout 'shara';
% title $title . 'Shara';

% my $tracks = stash ('tracks') || [];
% my $cover = stash ('cover') || '/i/NoCover.jpg';


<div class="row-fluid pull-left">
	

% if (@$tracks) {
	<div class="span5 cover">
		<div class="container cover" style="overflow:hidden;">
% 	if ($cover) {
			<img src="<%= $cover %>" style="width: 460px; margin-top: -70px;"/>
% 	}
		</div>
		<audio preload></audio>
		<div class="cover-layer-2">
			<h1 class="bg-white" id="title"><%= $tracks->[0]->{title} %></h1><br/>
			<p class="bg-white" id="author">By <h2 class="bg-white"><%= $tracks->[0]->{artist} %></h2></p>
		</div>
	</div>
	<div class="span6" style="width: 460px">
% }


	<ul class="nav nav-tabs  nav-stacked tracks">
% if (stash 'path') {
		<li><a href="../"><strong>..</strong></a></li>
% }
% for (@$dirs) {
		<li><a href="/d/<%= stash 'path' %><%= $_  %>/"><strong><%= $_ %></strong></a></li>
% }
% if (@$tracks) {
    	<ol class="nav nav-tabs  nav-stacked tracks">
% 	for (my $i = 0 ; $i < @$tracks ; $i ++) {
%		my $t	= $tracks->[$i];
%		my $src = '/d/' . stash ('path') . $t->{file};
			<li class="track" rel="<%= $i %>">
				<a class="track-title" data-src="<%= $src %>" href="<%= $src %>" rel="<%= $i %>" style="font-size: 1.2em">
					<font size="-2"><%= $t->{track} %></font>
					<%= $t->{title} %>
				</a>
			</li>
% 	}
		</ol>
% }

% for (@{stash ('others') || []}) {
		<li><a href="/d/<%= stash 'path' %><%= $_  %>"><%= $_ %></a></li>
% }

	</ul>



</div>


% if (@$tracks) {
</div>
	
	<script>
%	use JSON;
	var myPlaylist = <%== JSON->new->latin1->encode($tracks) %>;
	  $(function() { 
	  	
	  	function set_info (id) {
	  		$('#title').html(myPlaylist[id]['title']);
	  		$('#author').html(myPlaylist[id]['author']);
	  	}
	    // Setup the player to autoplay the next track
	    var a = audiojs.createAll({
	      trackEnded: function() {
	        var next = $('ol li.playing').next();
	        if (!next.length) next = $('ol li').first();
	        next.addClass('playing').siblings().removeClass('playing');
	        audio.load($('a', next).attr('data-src'));
	        set_info(parseInt($('a', next).attr('rel')));
	        audio.play();
	      }
	    });
	    
	    // Load in the first track
	    var audio = a[0];
	        first = $('ol a').attr('data-src');
	    $('ol li').first().addClass('playing');
	    audio.load(first);
	    set_info(parseInt($('ol a').attr('rel')));
	
	    // Load in a track on click
	    $('ol li').click(function(e) {
	      e.preventDefault();
	      $(this).addClass('playing').siblings().removeClass('playing');
	      audio.load($('a', this).attr('data-src'));
	      set_info(parseInt($('a', this).attr('rel')));
	      audio.play();
	      
	    });
	    // Keyboard shortcuts
	    $(document).keydown(function(e) {
	      var unicode = e.charCode ? e.charCode : e.keyCode;
	         // right arrow
	      if (unicode == 39) {
	        var next = $('li.playing').next();
	        if (!next.length) next = $('ol li').first();
	        next.click();
	        // back arrow
	      } else if (unicode == 37) {
	        var prev = $('li.playing').prev();
	        if (!prev.length) prev = $('ol li').last();
	        prev.click();
	        // spacebar
	      } else if (unicode == 32) {
	      	e.preventDefault();
	        audio.playPause();
	      }
	    })
	  });
	</script>
% }